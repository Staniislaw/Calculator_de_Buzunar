/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenlistlungime_screen/ScreenListLungimeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ScreenListLungimeViewBase::ScreenListLungimeViewBase() :
    buttonCallback(this, &ScreenListLungimeViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &ScreenListLungimeViewBase::radioButtonSelectedCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    boxWithBorder1.setPosition(-8, 0, 248, 320);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(61, 67, 74));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(5);
    add(boxWithBorder1);

    flexButtonBACK.setXY(61, 270);
    flexButtonBACK.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_DISABLED_ID));
    flexButtonBACK.setAction(buttonCallback);
    add(flexButtonBACK);

    textArea1_1.setXY(36, 6);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FFIG));
    add(textArea1_1);

    textArea1_2.setXY(35, 78);
    textArea1_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2.setLinespacing(0);
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GQZ6));
    add(textArea1_2);

    textArea1_2_1.setXY(35, 114);
    textArea1_2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2_1.setLinespacing(0);
    textArea1_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AOSF));
    add(textArea1_2_1);

    textArea1.setXY(36, 42);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LRR9));
    add(textArea1);

    listLayout1.setXY(0, 0);
    listLayout1.setDirection(touchgfx::SOUTH);
    radioButtonGroup1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    radioButtonMilimetru.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonMilimetru.setSelected(false);
    radioButtonMilimetru.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonMilimetru);
    listLayout1.add(radioButtonMilimetru);

    radioButtonCM.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonCM.setSelected(false);
    radioButtonCM.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonCM);
    listLayout1.add(radioButtonCM);

    radioButtonM.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonM.setSelected(false);
    radioButtonM.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonM);
    listLayout1.add(radioButtonM);

    radioButtonKm.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonKm.setSelected(false);
    radioButtonKm.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonKm);
    listLayout1.add(radioButtonKm);

    add(listLayout1);
}

ScreenListLungimeViewBase::~ScreenListLungimeViewBase()
{

}

void ScreenListLungimeViewBase::setupScreen()
{

}

void ScreenListLungimeViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &flexButtonBACK)
    {
        //Interaction1
        //When flexButtonBACK clicked change screen to ScreenLungime
        //Go to ScreenLungime with no screen transition
        application().gotoScreenLungimeScreenNoTransition();
    }
}

void ScreenListLungimeViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButtonMilimetru)
    {
        //Interaction2
        //When radioButtonMilimetru selected call virtual function
        //Call fncMm
        fncMm();
    }
    if (&src == &radioButtonCM)
    {
        //Interaction3
        //When radioButtonCM selected call virtual function
        //Call fncCm
        fncCm();
    }
    if (&src == &radioButtonM)
    {
        //Interaction4
        //When radioButtonM selected call virtual function
        //Call fncM
        fncM();
    }
    if (&src == &radioButtonKm)
    {
        //Interaction5
        //When radioButtonKm selected call virtual function
        //Call fncKm
        fncKm();
    }
}

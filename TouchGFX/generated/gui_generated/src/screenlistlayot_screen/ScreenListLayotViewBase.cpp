/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenlistlayot_screen/ScreenListLayotViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ScreenListLayotViewBase::ScreenListLayotViewBase() :
    buttonCallback(this, &ScreenListLayotViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &ScreenListLayotViewBase::radioButtonSelectedCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    boxWithBorder1.setPosition(-8, 0, 248, 320);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(61, 67, 74));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(5);
    add(boxWithBorder1);

    listLayout1.setXY(0, 0);
    listLayout1.setDirection(touchgfx::SOUTH);
    radioButtonGroup1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    radioButtonCMpS.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_ON_PRESSED_ID));
    radioButtonCMpS.setSelected(false);
    radioButtonCMpS.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonCMpS);
    listLayout1.add(radioButtonCMpS);

    radioButtonMpS.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_ON_PRESSED_ID));
    radioButtonMpS.setSelected(false);
    radioButtonMpS.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonMpS);
    listLayout1.add(radioButtonMpS);

    radioButtonKmpO.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUND_ON_PRESSED_ID));
    radioButtonKmpO.setSelected(false);
    radioButtonKmpO.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonKmpO);
    listLayout1.add(radioButtonKmpO);

    add(listLayout1);

    textArea1.setXY(36, 42);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OJXU));
    add(textArea1);

    textArea1_2.setXY(36, 78);
    textArea1_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2.setLinespacing(0);
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_85WB));
    add(textArea1_2);

    textArea1_1.setXY(36, 7);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I1CR));
    add(textArea1_1);

    flexButtonBACK.setXY(65, 270);
    flexButtonBACK.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
    flexButtonBACK.setAction(buttonCallback);
    add(flexButtonBACK);
}

ScreenListLayotViewBase::~ScreenListLayotViewBase()
{

}

void ScreenListLayotViewBase::setupScreen()
{

}

void ScreenListLayotViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &flexButtonBACK)
    {
        //Interaction2
        //When flexButtonBACK clicked change screen to ScreenViteza
        //Go to ScreenViteza with no screen transition
        application().gotoScreenVitezaScreenNoTransition();
    }
}

void ScreenListLayotViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButtonCMpS)
    {
        //Interaction3
        //When radioButtonCMpS selected call virtual function
        //Call fncRadioCMpS
        fncRadioCMpS();
    }
    if (&src == &radioButtonMpS)
    {
        //Interaction4
        //When radioButtonMpS selected call virtual function
        //Call fncRadioMpS
        fncRadioMpS();
    }
    if (&src == &radioButtonKmpO)
    {
        //Interaction5
        //When radioButtonKmpO selected call virtual function
        //Call fncKmpO
        fncKmpO();
    }
}

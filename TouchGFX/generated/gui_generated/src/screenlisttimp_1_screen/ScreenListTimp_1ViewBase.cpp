/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenlisttimp_1_screen/ScreenListTimp_1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ScreenListTimp_1ViewBase::ScreenListTimp_1ViewBase() :
    buttonCallback(this, &ScreenListTimp_1ViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &ScreenListTimp_1ViewBase::radioButtonSelectedCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    boxWithBorder1.setPosition(-8, 0, 248, 320);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(61, 67, 74));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(5);
    add(boxWithBorder1);

    flexButtonBACK.setXY(61, 270);
    flexButtonBACK.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
    flexButtonBACK.setAction(buttonCallback);
    add(flexButtonBACK);

    textArea1_1.setXY(36, 7);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RYTO));
    add(textArea1_1);

    textArea1_2.setXY(36, 78);
    textArea1_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2.setLinespacing(0);
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NQIW));
    add(textArea1_2);

    textArea1_2_1.setXY(35, 114);
    textArea1_2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2_1.setLinespacing(0);
    textArea1_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K6KX));
    add(textArea1_2_1);

    textArea1_2_2.setXY(36, 148);
    textArea1_2_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2_2.setLinespacing(0);
    textArea1_2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GQRV));
    add(textArea1_2_2);

    textArea1_2_2_1.setXY(35, 186);
    textArea1_2_2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2_2_1.setLinespacing(0);
    textArea1_2_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_51GT));
    add(textArea1_2_2_1);

    textArea1_2_2_1_1.setXY(35, 222);
    textArea1_2_2_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2_2_1_1.setLinespacing(0);
    textArea1_2_2_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9JJE));
    add(textArea1_2_2_1_1);

    textArea1.setXY(36, 42);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VBJH));
    add(textArea1);

    listLayout1.setXY(0, 0);
    listLayout1.setDirection(touchgfx::SOUTH);
    radioButtonGroup1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    radioButtonMs.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonMs.setSelected(false);
    radioButtonMs.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonMs);
    listLayout1.add(radioButtonMs);

    radioButtonS.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonS.setSelected(false);
    radioButtonS.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonS);
    listLayout1.add(radioButtonS);

    radioButtonMin.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonMin.setSelected(false);
    radioButtonMin.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonMin);
    listLayout1.add(radioButtonMin);

    radioButtonOre.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonOre.setSelected(false);
    radioButtonOre.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonOre);
    listLayout1.add(radioButtonOre);

    radioButtonZile.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonZile.setSelected(false);
    radioButtonZile.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonZile);
    listLayout1.add(radioButtonZile);

    radioButtonSapt.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonSapt.setSelected(false);
    radioButtonSapt.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonSapt);
    listLayout1.add(radioButtonSapt);

    radioButtonAni.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButtonAni.setSelected(false);
    radioButtonAni.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButtonAni);
    listLayout1.add(radioButtonAni);

    add(listLayout1);
}

ScreenListTimp_1ViewBase::~ScreenListTimp_1ViewBase()
{

}

void ScreenListTimp_1ViewBase::setupScreen()
{

}

void ScreenListTimp_1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &flexButtonBACK)
    {
        //Interaction1
        //When flexButtonBACK clicked change screen to ScreenTimp
        //Go to ScreenTimp with no screen transition
        application().gotoScreenTimpScreenNoTransition();
    }
}

void ScreenListTimp_1ViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButtonMs)
    {
        //Interaction2
        //When radioButtonMs selected call virtual function
        //Call fncMs
        fncMs();
    }
    if (&src == &radioButtonS)
    {
        //Interaction3
        //When radioButtonS selected call virtual function
        //Call fncS
        fncS();
    }
    if (&src == &radioButtonMin)
    {
        //Interaction4
        //When radioButtonMin selected call virtual function
        //Call fncMin
        fncMin();
    }
    if (&src == &radioButtonOre)
    {
        //Interaction5
        //When radioButtonOre selected call virtual function
        //Call fncOre
        fncOre();
    }
    if (&src == &radioButtonZile)
    {
        //Interaction6
        //When radioButtonZile selected call virtual function
        //Call fncZile
        fncZile();
    }
    if (&src == &radioButtonSapt)
    {
        //Interaction7
        //When radioButtonSapt selected call virtual function
        //Call fncSapt
        fncSapt();
    }
    if (&src == &radioButtonAni)
    {
        //Interaction8
        //When radioButtonAni selected call virtual function
        //Call fncAni
        fncAni();
    }
}
